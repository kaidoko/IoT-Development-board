  /* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled 2"
  https://create.arduino.cc/cloud/things/32329a77-8d65-4f02-812e-16e1e381b591 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float temp;
  int servoVal;
  bool led1;
  bool led2;
  bool led3;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include "DHT.h"
#include Servo.h"
#define DHTPIN D7
#define DHTTYPE DHT11

Servo myservo;  
DHT dht(DHTPIN, DHTTYPE);

boolean button1State = 0; // Variable to store the state of button 1
boolean lastButtonState1 = 0; // Variable to store the last state of button 1
boolean button2State = 0; // Variable to store the state of button 2
boolean lastButtonState2 = 0; // Variable to store the last state of button 2
float h, t;


void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  myservo.attach(D8);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  pinMode(D0, OUTPUT);
  pinMode(D5, OUTPUT);
  pinMode(D6, OUTPUT);
  
  pinMode(D3, INPUT);
  pinMode(D4, INPUT);
  
  digitalWrite(D5, LOW);
  digitalWrite(D6, LOW);
  digitalWrite(D0, LOW);
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  // h = dht.readHumidity();
  
  temp = dht.readTemperature();
  button1State = digitalRead(D3);
  

  if (button1State != lastButtonState1 && button1State == HIGH) {
    // Toggle the state of led1
    led1 = !led1;
    onLed1Change();
  }
  
  button2State = digitalRead(D4);
  
  if (button2State != lastButtonState2 && button2State == HIGH) {
    // Change the state of led1 to false
    led2 = !led2;
    onLed2Change();
  }
  
  lastButtonState1 = button1State;
  lastButtonState2 = button2State;
  
  
  if (led1 == true){
    digitalWrite(D3, HIGH);
  } else{
    digitalWrite(D3, LOW);
  }
  
  if (led2== true){
    digitalWrite(D4, HIGH);
  } else{
    digitalWrite(D4, LOW);
  }
}



/*
  Since Led1 is READ_WRITE variable, onLed1Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLed1Change()  {
  // Add your code here to act upon Led1 change
  if (led1 == true){
    digitalWrite(D5, HIGH);
  } else{
    digitalWrite(D5, LOW);
  }
}

/*
  Since Led2 is READ_WRITE variable, onLed2Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLed2Change()  {
  // Add your code here to act upon Led2 change
   if (led2 == true){
    digitalWrite(D6, HIGH);
  } else{
    digitalWrite(D6, LOW);
  }
}

/*
  Since Led3 is READ_WRITE variable, onLed3Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLed3Change()  {
  // Add your code here to act upon Led3 change
  
  if (led3 == true) {
    digitalWrite(D0, HIGH);
  }
    else {
      digitalWrite(D0, LOW);
    }
}

/*
  Since Humidity is READ_WRITE variable, onHumidityChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onHumidityChange()  {
  // Add your code here to act upon Humidity change
}

/*
  Since Temp is READ_WRITE variable, onTempChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onTempChange()  {
  // Add your code here to act upon Temp change
}


/*
  Since ServoVal is READ_WRITE variable, onServoValChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onServoValChange()  {
  // Add your code here to act upon ServoVal change
  myservo.write(servoVal); 
}